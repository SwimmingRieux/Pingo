{
    "errors": {
      "load_from_link_error": "error loading data from link.",
      "config_not_found": "config not found.",
      "group_not_found": "group not found",
      "config_format_error": "error formatting config.",
      "group_creating_error": "error creating group.",
      "directory_creating_error": "error creating directory.",
      "file_creating_error": "error creating file.",
      "http_status": "http status: ",
      "write_to_file_error": "failed to write to file: ",
      "file_remove_error": "an error happend removing the file, please manually remove the path: ",
      "config_remove_error": "an error happend removing the config: ",
      "invalid_formatter": "given formatter is invalid: ",
      "invalid_port_setter": "given port setter is invalid: ",
      "not_enough_ports_found": "could not find enough ports for pinging the configs.",
      "listeners_count_error": "listeners count is not equal to configs count",
      "collective_format_error": "couldn't format the collection of raw configs. ",
      "proxy_variables_set_error": "couldn't set proxy variables",
      "v2ray_activate_error": "couldn't activate v2ray core",
      "v2ray_deactivate_error": "couldn't kill the v2ray process"
    },
    "goroutines_max": 10,
    "ports_count_limit": 20,
    "pinger_goroutines_max": 10,
    "listener_iteration_limit": 1000,
    "domains_big_enough": 15,
    "max_ping_wait_time_ms": 1000,
    "v2": {
      "config_path": "v2_configurations",
      "default_port": 12346,
      "default_host": "127.0.0.1",
      "dns": "{\n        \"disableFallback\": true,\n        \"servers\": [\n            {\n                \"address\": \"https://8.8.8.8/dns-query\",\n                \"domains\": [],\n                \"queryStrategy\": \"\"\n            },\n            {\n                \"address\": \"localhost\",\n                \"domains\": [],\n                \"queryStrategy\": \"\"\n            }\n        ],\n        \"tag\": \"dns\"\n    }",
      "inbounds": "[\n        {\n            \"listen\": \"127.0.0.1\",\n            \"port\": 12346,\n            \"protocol\": \"socks\",\n            \"settings\": {\n                \"udp\": true\n            },\n            \"sniffing\": {\n                \"destOverride\": [\n                    \"http\",\n                    \"tls\",\n                    \"quic\"\n                ],\n                \"enabled\": true,\n                \"metadataOnly\": false,\n                \"routeOnly\": true\n            },\n            \"tag\": \"socks-in\"\n        },\n        {\n            \"listen\": \"127.0.0.1\",\n            \"port\": 12346,\n            \"protocol\": \"http\",\n            \"sniffing\": {\n                \"destOverride\": [\n                    \"http\",\n                    \"tls\",\n                    \"quic\"\n                ],\n                \"enabled\": true,\n                \"metadataOnly\": false,\n                \"routeOnly\": true\n            },\n            \"tag\": \"http-in\"\n        }\n    ]",
      "log": "{\n        \"loglevel\": \"warning\"\n    }",
      "policy": "{\n        \"levels\": {\n            \"1\": {\n                \"connIdle\": 30\n            }\n        },\n        \"system\": {\n            \"statsOutboundDownlink\": true,\n            \"statsOutboundUplink\": true\n        }\n    }",
      "routing": "{\n        \"domainStrategy\": \"AsIs\",\n        \"rules\": [\n            {\n                \"inboundTag\": [\n                    \"socks-in\",\n                    \"http-in\"\n                ],\n                \"outboundTag\": \"dns-out\",\n                \"port\": \"53\",\n                \"type\": \"field\"\n            },\n            {\n                \"outboundTag\": \"proxy\",\n                \"port\": \"0-65535\",\n                \"type\": \"field\"\n            }\n        ]\n    }",
      "stats": "{}"
    }
  }
  